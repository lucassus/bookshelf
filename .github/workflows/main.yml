name: CI

on: [push]

jobs:
  grahpql-introspection:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - uses: kamilkisiela/graphql-inspector@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        schema: "master:apps/server/schema.generated.graphql"

  graphql:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: 14.6.0

    - uses: actions/cache@v2
      with:
        path: "node_modules"
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Install packages
      run: yarn install

    - name: GraphQL Validate
      run: yarn graphql validate

    - name: GraphQL Similar
      run: yarn graphql similar

    - name: GraphQL Diff
      run: yarn graphql diff

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: 14.6.0

    - uses: actions/cache@v2
      with:
        path: "node_modules"
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Install packages
      run: yarn install

    - name: GraphQL Code Generation
      run: yarn graphql codegen

    - name: Lint
      run: yarn lint

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: 14.6.0

    - uses: actions/cache@v2
      with:
        path: "node_modules"
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Install packages
      run: yarn install

    - name: GraphQL Code Generation
      run: yarn graphql codegen

    - name: Build
      run: yarn build

    - name: Test
      run: yarn test --coverage --runInBand

    - name: Upload test coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  test-e2e:
    runs-on: ubuntu-latest
    container: node:14.6.0

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bookshelf_development
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v1

    - uses: actions/cache@v2
      with:
        path: "node_modules"
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Install packages
      run: yarn install

    - name: GraphQL Code Generation
      run: yarn graphql codegen

    - name: Build
      run: yarn build

#    - name: Seed Database
#      env:
#        POSTGRES_HOST: postgres
#        POSTGRES_USER: postgres
#        POSTGRES_PASSWORD: postgres
#      run: yarn workspace @bookshelf/server db:seed

    - name: Start server in the background
      run: yarn dev &

    # TODO: It uses a fork that supports yarn berry, see https://github.com/cypress-io/github-action/issues/170
    - uses: tutorbookapp/github-action@master
      with:
        working-directory: apps/web-e2e
        wait-on: "http://localhost:8080"

#    - name: Build storybbok
#      run: yarn workspace @bookshelf/web storybook:build
