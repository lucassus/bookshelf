input RegistrationInput {
  name: String!
  email: String!
  password: String!
}

union RegistrationResult = ProtectedUser | ValidationErrors

input UpdateProfileInput {
  name: String!
  email: String!
  info: String!
}

union UpdateProfileResult = ProtectedUser | ValidationErrors

type GuestUser {
  _: Boolean # noop field
}

union CurrentUserResult = GuestUser | ProtectedUser

extend type Query {
  """
  Returns the currently logged in user.
  """
  currentUser: CurrentUserResult!
}

extend type Mutation {
  register(input: RegistrationInput!): RegistrationResult!

  updateProfile(input: UpdateProfileInput!): UpdateProfileResult! @requireAuthorization
}
