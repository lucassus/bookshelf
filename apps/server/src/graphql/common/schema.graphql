scalar ExternalID

scalar ISODateString

interface Resource {
  id: ExternalID!
}

union Anything = PublicUser | ProtectedUser | Author | Book | BookCopy

interface Timestampable {
  createdAt: ISODateString!
  updatedAt: ISODateString!
}

type Image {
  path: String!
  url: String!
}

interface Error {
  message: String!
}

type MutationError implements Error {
  message: String!
}

type ResourceNotFoundError implements Error {
  message: String!
}

type ValidationError implements Error {
  path: String!
  message: String!
}

type ValidationErrors {
  errors: [ValidationError!]!
}

# TODO: This interface is deprecated, use unions for more typesafe errors handling
interface MutationResponse {
  "A boolean that indicates whether the mutation was successful."
  success: Boolean!

  "Human-readable string that describes the result of the mutation"
  message: String!
}

extend type Query {
  resource(id: ID!): Resource!
  anything(id: ID!): Anything! @deprecated(reason: "No longer supported. Use 'resources' instead")
}
